/*
Doggy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package doggy

import (
	"encoding/json"
)

// TodoNotifyTimingType struct for TodoNotifyTimingType
type TodoNotifyTimingType struct {
}

// NewTodoNotifyTimingType instantiates a new TodoNotifyTimingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTodoNotifyTimingType() *TodoNotifyTimingType {
	this := TodoNotifyTimingType{}
	return &this
}

// NewTodoNotifyTimingTypeWithDefaults instantiates a new TodoNotifyTimingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTodoNotifyTimingTypeWithDefaults() *TodoNotifyTimingType {
	this := TodoNotifyTimingType{}
	return &this
}

func (o TodoNotifyTimingType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	return json.Marshal(toSerialize)
}

type NullableTodoNotifyTimingType struct {
	value *TodoNotifyTimingType
	isSet bool
}

func (v NullableTodoNotifyTimingType) Get() *TodoNotifyTimingType {
	return v.value
}

func (v *NullableTodoNotifyTimingType) Set(val *TodoNotifyTimingType) {
	v.value = val
	v.isSet = true
}

func (v NullableTodoNotifyTimingType) IsSet() bool {
	return v.isSet
}

func (v *NullableTodoNotifyTimingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTodoNotifyTimingType(val *TodoNotifyTimingType) *NullableTodoNotifyTimingType {
	return &NullableTodoNotifyTimingType{value: val, isSet: true}
}

func (v NullableTodoNotifyTimingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTodoNotifyTimingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


