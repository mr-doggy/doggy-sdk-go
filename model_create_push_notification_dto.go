/*
Doggy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package doggy

import (
	"encoding/json"
)

// CreatePushNotificationDto struct for CreatePushNotificationDto
type CreatePushNotificationDto struct {
	UserIds []string `json:"userIds,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	// Text, Markdown, Html, Other
	BodyType *map[string]interface{} `json:"bodyType,omitempty"`
	Body NullableString `json:"body,omitempty"`
	Url NullableString `json:"url,omitempty"`
}

// NewCreatePushNotificationDto instantiates a new CreatePushNotificationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePushNotificationDto() *CreatePushNotificationDto {
	this := CreatePushNotificationDto{}
	return &this
}

// NewCreatePushNotificationDtoWithDefaults instantiates a new CreatePushNotificationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePushNotificationDtoWithDefaults() *CreatePushNotificationDto {
	this := CreatePushNotificationDto{}
	return &this
}

// GetUserIds returns the UserIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetUserIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetUserIdsOk() (*[]string, bool) {
	if o == nil || o.UserIds == nil {
		return nil, false
	}
	return &o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasUserIds() bool {
	if o != nil && o.UserIds != nil {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *CreatePushNotificationDto) SetUserIds(v []string) {
	o.UserIds = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *CreatePushNotificationDto) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *CreatePushNotificationDto) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreatePushNotificationDto) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreatePushNotificationDto) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetDescription() {
	o.Description.Unset()
}

// GetBodyType returns the BodyType field value if set, zero value otherwise.
func (o *CreatePushNotificationDto) GetBodyType() map[string]interface{} {
	if o == nil || o.BodyType == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.BodyType
}

// GetBodyTypeOk returns a tuple with the BodyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePushNotificationDto) GetBodyTypeOk() (*map[string]interface{}, bool) {
	if o == nil || o.BodyType == nil {
		return nil, false
	}
	return o.BodyType, true
}

// HasBodyType returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasBodyType() bool {
	if o != nil && o.BodyType != nil {
		return true
	}

	return false
}

// SetBodyType gets a reference to the given map[string]interface{} and assigns it to the BodyType field.
func (o *CreatePushNotificationDto) SetBodyType(v map[string]interface{}) {
	o.BodyType = &v
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetBody() string {
	if o == nil || o.Body.Get() == nil {
		var ret string
		return ret
	}
	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetBodyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// HasBody returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasBody() bool {
	if o != nil && o.Body.IsSet() {
		return true
	}

	return false
}

// SetBody gets a reference to the given NullableString and assigns it to the Body field.
func (o *CreatePushNotificationDto) SetBody(v string) {
	o.Body.Set(&v)
}
// SetBodyNil sets the value for Body to be an explicit nil
func (o *CreatePushNotificationDto) SetBodyNil() {
	o.Body.Set(nil)
}

// UnsetBody ensures that no value is present for Body, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetBody() {
	o.Body.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreatePushNotificationDto) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreatePushNotificationDto) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *CreatePushNotificationDto) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *CreatePushNotificationDto) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *CreatePushNotificationDto) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *CreatePushNotificationDto) UnsetUrl() {
	o.Url.Unset()
}

func (o CreatePushNotificationDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserIds != nil {
		toSerialize["userIds"] = o.UserIds
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.BodyType != nil {
		toSerialize["bodyType"] = o.BodyType
	}
	if o.Body.IsSet() {
		toSerialize["body"] = o.Body.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePushNotificationDto struct {
	value *CreatePushNotificationDto
	isSet bool
}

func (v NullableCreatePushNotificationDto) Get() *CreatePushNotificationDto {
	return v.value
}

func (v *NullableCreatePushNotificationDto) Set(val *CreatePushNotificationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePushNotificationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePushNotificationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePushNotificationDto(val *CreatePushNotificationDto) *NullableCreatePushNotificationDto {
	return &NullableCreatePushNotificationDto{value: val, isSet: true}
}

func (v NullableCreatePushNotificationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePushNotificationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


