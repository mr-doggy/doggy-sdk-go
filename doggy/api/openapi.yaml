openapi: 3.0.1
info:
  title: Doggy API
  version: v1
servers:
- url: /
security:
- oauth2: []
paths:
  /api/app/device:
    get:
      parameters:
      - explode: true
        in: query
        name: Sorting
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SkipCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: MaxResultCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeviceDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/DeviceDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
  /api/app/device/refresh:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshDeviceStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RefreshDeviceStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RefreshDeviceStatusDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
  /api/app/device/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Device
  /api/app/file/file-or-credentials:
    get:
      parameters:
      - explode: true
        in: query
        name: rapidCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileOrCredentialsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/FileOrCredentialsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/FileOrCredentialsDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - File
  /api/app/file/pre-sign-url:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - File
  /api/app/item:
    get:
      parameters:
      - explode: true
        in: query
        name: ParentItemId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: SearchKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Types
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ItemType'
          type: array
        style: form
      - explode: true
        in: query
        name: Extension
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ContentType
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: TagId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: MaxResultCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Sorting
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SkipCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ItemDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ItemDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
  /api/app/item/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateItemDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
  /api/app/item/special-items:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SpecialItemDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialItemDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SpecialItemDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
  /api/app/item/sync:
    get:
      parameters:
      - explode: true
        in: query
        name: afterVersion
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: maxResultCount
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ItemDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ItemDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Item
  /api/app/key-value/bool:
    get:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanKeyValue'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanKeyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanKeyValue'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/date-time:
    get:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DateTimeKeyValue'
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeKeyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/DateTimeKeyValue'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/decimal:
    get:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DecimalKeyValue'
            application/json:
              schema:
                $ref: '#/components/schemas/DecimalKeyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/DecimalKeyValue'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/double:
    get:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DoubleKeyValue'
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleKeyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/DoubleKeyValue'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/int:
    get:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Int32KeyValue'
            application/json:
              schema:
                $ref: '#/components/schemas/Int32KeyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/Int32KeyValue'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/string:
    get:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringKeyValue'
            application/json:
              schema:
                $ref: '#/components/schemas/StringKeyValue'
            text/json:
              schema:
                $ref: '#/components/schemas/StringKeyValue'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/set-bool:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooleanSetKeyValueDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BooleanSetKeyValueDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BooleanSetKeyValueDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/set-date-time:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeSetKeyValueDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DateTimeSetKeyValueDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DateTimeSetKeyValueDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/set-decimal:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecimalSetKeyValueDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DecimalSetKeyValueDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DecimalSetKeyValueDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/set-double:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoubleSetKeyValueDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DoubleSetKeyValueDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DoubleSetKeyValueDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/set-int:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int32SetKeyValueDto'
          text/json:
            schema:
              $ref: '#/components/schemas/Int32SetKeyValueDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Int32SetKeyValueDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/key-value/set-string:
    post:
      parameters:
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringSetKeyValueDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StringSetKeyValueDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StringSetKeyValueDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - KeyValue
  /api/app/member:
    get:
      parameters:
      - explode: true
        in: query
        name: creatorId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberDto'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Member
  /api/app/note/note-specs:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NoteSpecDto'
            application/json:
              schema:
                $ref: '#/components/schemas/NoteSpecDto'
            text/json:
              schema:
                $ref: '#/components/schemas/NoteSpecDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Note
  /api/app/notification/bark/{apiKey}/{message}:
    get:
      parameters:
      - explode: false
        in: path
        name: apiKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: message
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: automaticallyCopy
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: copy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: isArchive
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: icon
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: level
        required: false
        schema:
          default: active
          type: string
        style: form
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Notification
  /api/app/notification:
    get:
      parameters:
      - explode: true
        in: query
        name: Sorting
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SkipCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: MaxResultCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationInfoDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationInfoDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationInfoDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Notification
  /api/app/notification/push:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePushNotificationDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePushNotificationDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePushNotificationDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Notification
  /api/app/settings:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SettingsDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Settings
  /api/app/settings/set:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SettingsDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Settings
  /api/app/simple-data/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - SimpleData
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SimpleDataDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleDataDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SimpleDataDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - SimpleData
  /api/app/simple-data:
    get:
      parameters:
      - explode: true
        in: query
        name: Collection
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Sorting
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SkipCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: MaxResultCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SimpleDataDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleDataDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SimpleDataDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - SimpleData
  /api/app/simple-data/save:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleDataDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SimpleDataDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SimpleDataDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SimpleDataDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleDataDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SimpleDataDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - SimpleData
  /api/app/sms/send-change-phone-code:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SendSmsCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendSmsCodeDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Sms
  /api/app/sms/send-login-code:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsCodeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SendSmsCodeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendSmsCodeDto'
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Sms
  /api/app/storage:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserStorageDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserStorageDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserStorageDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Storage
  /api/app/sync-state:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SyncStateDto'
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStateDto'
            text/json:
              schema:
                $ref: '#/components/schemas/SyncStateDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - SyncState
  /api/app/tag:
    get:
      parameters:
      - explode: true
        in: query
        name: SearchKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ParentTagId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: MaxResultCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Sorting
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SkipCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tag
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tag
  /api/app/tag/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tag
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tag
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tag
  /api/app/tag/sync:
    get:
      parameters:
      - explode: true
        in: query
        name: afterVersion
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: maxResultCount
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Tag
  /api/app/todo:
    get:
      parameters:
      - explode: true
        in: query
        name: SearchKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IsDone
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: TagId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: MaxResultCount
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ParentId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: true
        in: query
        name: IsExpired
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: Sorting
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: SkipCount
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TodoDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TodoDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Todo
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TodoDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TodoDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Todo
  /api/app/todo/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Todo
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TodoDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TodoDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Todo
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTodoDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TodoDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TodoDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Todo
  /api/app/todo/sync:
    get:
      parameters:
      - explode: true
        in: query
        name: afterVersion
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: skipCount
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: maxResultCount
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TodoDtoPagedResultDto'
            application/json:
              schema:
                $ref: '#/components/schemas/TodoDtoPagedResultDto'
            text/json:
              schema:
                $ref: '#/components/schemas/TodoDtoPagedResultDto'
          description: Success
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Forbidden
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Unauthorized
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Not Found
        "501":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoteServiceErrorResponse'
          description: Server Error
      tags:
      - Todo
components:
  schemas:
    AbpLoginResult:
      additionalProperties: false
      properties:
        result:
          $ref: '#/components/schemas/LoginResultType'
        description:
          nullable: true
          readOnly: true
          type: string
      type: object
    ActionApiDescriptionModel:
      additionalProperties: false
      properties:
        uniqueName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        httpMethod:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        supportedVersions:
          items:
            type: string
          nullable: true
          type: array
        parametersOnMethod:
          items:
            $ref: '#/components/schemas/MethodParameterApiDescriptionModel'
          nullable: true
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/ParameterApiDescriptionModel'
          nullable: true
          type: array
        returnValue:
          $ref: '#/components/schemas/ReturnValueApiDescriptionModel'
        allowAnonymous:
          nullable: true
          type: boolean
        implementFrom:
          nullable: true
          type: string
      type: object
    ApplicationApiDescriptionModel:
      additionalProperties: false
      properties:
        modules:
          additionalProperties:
            $ref: '#/components/schemas/ModuleApiDescriptionModel'
          nullable: true
          type: object
        types:
          additionalProperties:
            $ref: '#/components/schemas/TypeApiDescriptionModel'
          nullable: true
          type: object
      type: object
    ApplicationAuthConfigurationDto:
      additionalProperties: false
      properties:
        policies:
          additionalProperties:
            type: boolean
          nullable: true
          type: object
        grantedPolicies:
          additionalProperties:
            type: boolean
          nullable: true
          type: object
      type: object
    ApplicationConfigurationDto:
      additionalProperties: false
      properties:
        localization:
          $ref: '#/components/schemas/ApplicationLocalizationConfigurationDto'
        auth:
          $ref: '#/components/schemas/ApplicationAuthConfigurationDto'
        setting:
          $ref: '#/components/schemas/ApplicationSettingConfigurationDto'
        currentUser:
          $ref: '#/components/schemas/CurrentUserDto'
        features:
          $ref: '#/components/schemas/ApplicationFeatureConfigurationDto'
        multiTenancy:
          $ref: '#/components/schemas/MultiTenancyInfoDto'
        currentTenant:
          $ref: '#/components/schemas/CurrentTenantDto'
        timing:
          $ref: '#/components/schemas/TimingDto'
        clock:
          $ref: '#/components/schemas/ClockDto'
        objectExtensions:
          $ref: '#/components/schemas/ObjectExtensionsDto'
      type: object
    ApplicationFeatureConfigurationDto:
      additionalProperties: false
      properties:
        values:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    ApplicationLocalizationConfigurationDto:
      additionalProperties: false
      properties:
        values:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: object
        languages:
          items:
            $ref: '#/components/schemas/LanguageInfo'
          nullable: true
          type: array
        currentCulture:
          $ref: '#/components/schemas/CurrentCultureDto'
        defaultResourceName:
          nullable: true
          type: string
        languagesMap:
          additionalProperties:
            items:
              $ref: '#/components/schemas/NameValue'
            type: array
          nullable: true
          type: object
        languageFilesMap:
          additionalProperties:
            items:
              $ref: '#/components/schemas/NameValue'
            type: array
          nullable: true
          type: object
      type: object
    ApplicationSettingConfigurationDto:
      additionalProperties: false
      properties:
        values:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    AppTheme:
      enum:
      - System
      - Light
      - Dark
      type: string
    BooleanKeyValue:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        durationSeconds: 0.8008281904610115
        value: true
      properties:
        value:
          type: boolean
        durationSeconds:
          format: double
          nullable: true
          type: number
        expiredAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
      type: object
    BooleanSetKeyValueDto:
      additionalProperties: false
      example:
        durationSeconds: 0.8008281904610115
        value: true
      properties:
        value:
          type: boolean
        durationSeconds:
          format: double
          nullable: true
          type: number
      type: object
    ChangePasswordInput:
      additionalProperties: false
      properties:
        currentPassword:
          maxLength: 128
          minLength: 0
          nullable: true
          type: string
        newPassword:
          maxLength: 128
          minLength: 0
          type: string
      required:
      - newPassword
      type: object
    ClockDto:
      additionalProperties: false
      properties:
        kind:
          nullable: true
          type: string
      type: object
    ControllerApiDescriptionModel:
      additionalProperties: false
      properties:
        controllerName:
          nullable: true
          type: string
        controllerGroupName:
          nullable: true
          type: string
        isRemoteService:
          type: boolean
        apiVersion:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        interfaces:
          items:
            $ref: '#/components/schemas/ControllerInterfaceApiDescriptionModel'
          nullable: true
          type: array
        actions:
          additionalProperties:
            $ref: '#/components/schemas/ActionApiDescriptionModel'
          nullable: true
          type: object
      type: object
    ControllerInterfaceApiDescriptionModel:
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
      type: object
    CreatePushNotificationDto:
      additionalProperties: false
      example:
        bodyType: bodyType
        userIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        title: title
        body: body
        url: url
      properties:
        userIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        title:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        bodyType:
          nullable: true
          type: string
        body:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    CreateUpdateItemDto:
      additionalProperties: false
      example:
        syncVersion: 0
        extension: extension
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        tagIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        password: password
        storageClass: storageClass
        parentItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDeleted: true
        name: name
        fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
        rapidCode: rapidCode
        sliceMd5: sliceMd5
        fileCreatedAt: 2000-01-23T04:56:07.000+00:00
        contentType: contentType
        key: key
        md5: md5
      properties:
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        parentItemId:
          format: uuid
          nullable: true
          type: string
        tagIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        key:
          nullable: true
          type: string
        md5:
          nullable: true
          type: string
        sliceMd5:
          nullable: true
          type: string
        rapidCode:
          nullable: true
          type: string
        contentType:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ItemType'
        displayStyle:
          $ref: '#/components/schemas/DisplayStyle'
        extension:
          nullable: true
          type: string
        storageClass:
          nullable: true
          type: string
        fileCreatedAt:
          format: date-time
          nullable: true
          type: string
        fileUpdatedAt:
          format: date-time
          nullable: true
          type: string
        syncVersion:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        deletionTime:
          format: date-time
          nullable: true
          type: string
        creationTime:
          format: date-time
          type: string
        lastModificationTime:
          format: date-time
          type: string
      type: object
    CreateUpdateNotificationDto:
      additionalProperties: false
      properties:
        userId:
          format: uuid
          type: string
        notificationInfoId:
          format: uuid
          type: string
        notificationMethod:
          nullable: true
          type: string
        success:
          nullable: true
          type: boolean
        completionTime:
          format: date-time
          nullable: true
          type: string
        failureReason:
          nullable: true
          type: string
        retryNotificationId:
          format: uuid
          nullable: true
          type: string
      type: object
    CreateUpdateNotificationInfoDto:
      additionalProperties: false
      type: object
    CreateUpdateTagDto:
      additionalProperties: false
      example:
        syncVersion: 0
        parentTagId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDeleted: true
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        deletionTime: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          nullable: true
          type: string
        parentTagId:
          format: uuid
          nullable: true
          type: string
        syncVersion:
          format: int64
          type: integer
        isDeleted:
          type: boolean
        deletionTime:
          format: date-time
          nullable: true
          type: string
        creationTime:
          format: date-time
          type: string
        lastModificationTime:
          format: date-time
          type: string
      type: object
    CreateUpdateTodoDto:
      additionalProperties: false
      example:
        syncVersion: 0
        doneAt: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        tagIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        title: title
        endAt: 2000-01-23T04:56:07.000+00:00
        isDone: true
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        title:
          nullable: true
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        tagIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        isDone:
          type: boolean
        parentId:
          format: uuid
          nullable: true
          type: string
        endAt:
          format: date-time
          nullable: true
          type: string
        syncVersion:
          format: int64
          type: integer
        doneAt:
          format: date-time
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deletionTime:
          format: date-time
          nullable: true
          type: string
        creationTime:
          format: date-time
          type: string
        lastModificationTime:
          format: date-time
          type: string
      type: object
    CurrentCultureDto:
      additionalProperties: false
      properties:
        displayName:
          nullable: true
          type: string
        englishName:
          nullable: true
          type: string
        threeLetterIsoLanguageName:
          nullable: true
          type: string
        twoLetterIsoLanguageName:
          nullable: true
          type: string
        isRightToLeft:
          type: boolean
        cultureName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        nativeName:
          nullable: true
          type: string
        dateTimeFormat:
          $ref: '#/components/schemas/DateTimeFormatDto'
      type: object
    CurrentTenantDto:
      additionalProperties: false
      properties:
        id:
          format: uuid
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        isAvailable:
          type: boolean
      type: object
    CurrentUserDto:
      additionalProperties: false
      properties:
        isAuthenticated:
          type: boolean
        id:
          format: uuid
          nullable: true
          type: string
        tenantId:
          format: uuid
          nullable: true
          type: string
        impersonatorUserId:
          format: uuid
          nullable: true
          type: string
        impersonatorTenantId:
          format: uuid
          nullable: true
          type: string
        impersonatorUserName:
          nullable: true
          type: string
        impersonatorTenantName:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        surName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        emailVerified:
          type: boolean
        phoneNumber:
          nullable: true
          type: string
        phoneNumberVerified:
          type: boolean
        roles:
          items:
            type: string
          nullable: true
          type: array
      type: object
    DateTimeFormatDto:
      additionalProperties: false
      properties:
        calendarAlgorithmType:
          nullable: true
          type: string
        dateTimeFormatLong:
          nullable: true
          type: string
        shortDatePattern:
          nullable: true
          type: string
        fullDateTimePattern:
          nullable: true
          type: string
        dateSeparator:
          nullable: true
          type: string
        shortTimePattern:
          nullable: true
          type: string
        longTimePattern:
          nullable: true
          type: string
      type: object
    DateTimeKeyValue:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        durationSeconds: 0.8008281904610115
        value: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          format: date-time
          type: string
        durationSeconds:
          format: double
          nullable: true
          type: number
        expiredAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
      type: object
    DateTimeSetKeyValueDto:
      additionalProperties: false
      example:
        durationSeconds: 0.8008281904610115
        value: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          format: date-time
          type: string
        durationSeconds:
          format: double
          nullable: true
          type: number
      type: object
    DecimalKeyValue:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        durationSeconds: 6.027456183070403
        value: 0.8008281904610115
      properties:
        value:
          format: double
          type: number
        durationSeconds:
          format: double
          nullable: true
          type: number
        expiredAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
      type: object
    DecimalSetKeyValueDto:
      additionalProperties: false
      example:
        durationSeconds: 6.027456183070403
        value: 0.8008281904610115
      properties:
        value:
          format: double
          type: number
        durationSeconds:
          format: double
          nullable: true
          type: number
      type: object
    DeviceDto:
      additionalProperties: false
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        systemVersion: systemVersion
        token: token
        isDeleted: true
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        brand: brand
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
        token:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/Platform'
        brand:
          nullable: true
          type: string
        systemVersion:
          nullable: true
          type: string
      type: object
    DeviceDtoPagedResultDto:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          systemVersion: systemVersion
          token: token
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          brand: brand
        - creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          systemVersion: systemVersion
          token: token
          isDeleted: true
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          brand: brand
      properties:
        items:
          items:
            $ref: '#/components/schemas/DeviceDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    DeviceStatus:
      enum:
      - None
      - Online
      - Offline
      type: string
    DisplayStyle:
      enum:
      - None
      - ListItem
      - LargeThumbnail
      type: string
    DoubleKeyValue:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        durationSeconds: 6.027456183070403
        value: 0.8008281904610115
      properties:
        value:
          format: double
          type: number
        durationSeconds:
          format: double
          nullable: true
          type: number
        expiredAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
      type: object
    DoubleSetKeyValueDto:
      additionalProperties: false
      example:
        durationSeconds: 6.027456183070403
        value: 0.8008281904610115
      properties:
        value:
          format: double
          type: number
        durationSeconds:
          format: double
          nullable: true
          type: number
      type: object
    EmailSettingsDto:
      additionalProperties: false
      properties:
        smtpHost:
          nullable: true
          type: string
        smtpPort:
          format: int32
          type: integer
        smtpUserName:
          nullable: true
          type: string
        smtpPassword:
          nullable: true
          type: string
        smtpDomain:
          nullable: true
          type: string
        smtpEnableSsl:
          type: boolean
        smtpUseDefaultCredentials:
          type: boolean
        defaultFromAddress:
          nullable: true
          type: string
        defaultFromDisplayName:
          nullable: true
          type: string
      type: object
    EntityExtensionDto:
      additionalProperties: false
      properties:
        properties:
          additionalProperties:
            $ref: '#/components/schemas/ExtensionPropertyDto'
          nullable: true
          type: object
        configuration:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    ExtensionEnumDto:
      additionalProperties: false
      properties:
        fields:
          items:
            $ref: '#/components/schemas/ExtensionEnumFieldDto'
          nullable: true
          type: array
        localizationResource:
          nullable: true
          type: string
      type: object
    ExtensionEnumFieldDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        value:
          nullable: true
      type: object
    ExtensionPropertyApiCreateDto:
      additionalProperties: false
      properties:
        isAvailable:
          type: boolean
      type: object
    ExtensionPropertyApiDto:
      additionalProperties: false
      properties:
        onGet:
          $ref: '#/components/schemas/ExtensionPropertyApiGetDto'
        onCreate:
          $ref: '#/components/schemas/ExtensionPropertyApiCreateDto'
        onUpdate:
          $ref: '#/components/schemas/ExtensionPropertyApiUpdateDto'
      type: object
    ExtensionPropertyApiGetDto:
      additionalProperties: false
      properties:
        isAvailable:
          type: boolean
      type: object
    ExtensionPropertyApiUpdateDto:
      additionalProperties: false
      properties:
        isAvailable:
          type: boolean
      type: object
    ExtensionPropertyAttributeDto:
      additionalProperties: false
      properties:
        typeSimple:
          nullable: true
          type: string
        config:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    ExtensionPropertyDto:
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
        typeSimple:
          nullable: true
          type: string
        displayName:
          $ref: '#/components/schemas/LocalizableStringDto'
        api:
          $ref: '#/components/schemas/ExtensionPropertyApiDto'
        ui:
          $ref: '#/components/schemas/ExtensionPropertyUiDto'
        attributes:
          items:
            $ref: '#/components/schemas/ExtensionPropertyAttributeDto'
          nullable: true
          type: array
        configuration:
          additionalProperties: {}
          nullable: true
          type: object
        defaultValue:
          nullable: true
      type: object
    ExtensionPropertyUiDto:
      additionalProperties: false
      properties:
        onTable:
          $ref: '#/components/schemas/ExtensionPropertyUiTableDto'
        onCreateForm:
          $ref: '#/components/schemas/ExtensionPropertyUiFormDto'
        onEditForm:
          $ref: '#/components/schemas/ExtensionPropertyUiFormDto'
        lookup:
          $ref: '#/components/schemas/ExtensionPropertyUiLookupDto'
      type: object
    ExtensionPropertyUiFormDto:
      additionalProperties: false
      properties:
        isVisible:
          type: boolean
      type: object
    ExtensionPropertyUiLookupDto:
      additionalProperties: false
      properties:
        url:
          nullable: true
          type: string
        resultListPropertyName:
          nullable: true
          type: string
        displayPropertyName:
          nullable: true
          type: string
        valuePropertyName:
          nullable: true
          type: string
        filterParamName:
          nullable: true
          type: string
      type: object
    ExtensionPropertyUiTableDto:
      additionalProperties: false
      properties:
        isVisible:
          type: boolean
      type: object
    FeatureDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
        provider:
          $ref: '#/components/schemas/FeatureProviderDto'
        description:
          nullable: true
          type: string
        valueType:
          $ref: '#/components/schemas/IStringValueType'
        depth:
          format: int32
          type: integer
        parentName:
          nullable: true
          type: string
      type: object
    FeatureGroupDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        features:
          items:
            $ref: '#/components/schemas/FeatureDto'
          nullable: true
          type: array
      type: object
    FeatureProviderDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        key:
          nullable: true
          type: string
      type: object
    FileDto:
      additionalProperties: false
      example:
        syncVersion: 6
        extension: extension
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        url: url
        storageClass: storageClass
        isDeleted: true
        size: 0
        name: name
        fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rapidCode: rapidCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sliceMd5: sliceMd5
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fileCreatedAt: 2000-01-23T04:56:07.000+00:00
        contentType: contentType
        key: key
        md5: md5
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        key:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        size:
          format: int32
          type: integer
        md5:
          nullable: true
          type: string
        sliceMd5:
          nullable: true
          type: string
        rapidCode:
          nullable: true
          type: string
        contentType:
          nullable: true
          type: string
        extension:
          nullable: true
          type: string
        storageClass:
          nullable: true
          type: string
        fileCreatedAt:
          format: date-time
          nullable: true
          type: string
        fileUpdatedAt:
          format: date-time
          nullable: true
          type: string
        syncVersion:
          format: int64
          type: integer
      type: object
    FileOrCredentialsDto:
      additionalProperties: false
      example:
        file:
          syncVersion: 6
          extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          url: url
          storageClass: storageClass
          isDeleted: true
          size: 0
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          contentType: contentType
          key: key
          md5: md5
        credentials:
          securityToken: securityToken
          accessKeyId: accessKeyId
          endPoint: endPoint
          bucketName: bucketName
          storageClass: storageClass
          accessKeySecret: accessKeySecret
          regionId: regionId
          prefix: prefix
          appId: appId
          expiration: expiration
          protocal: protocal
          expiredTime: 1
      properties:
        file:
          $ref: '#/components/schemas/FileDto'
        credentials:
          $ref: '#/components/schemas/UploadCredentials'
      type: object
    FindTenantResultDto:
      additionalProperties: false
      properties:
        success:
          type: boolean
        tenantId:
          format: uuid
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        isActive:
          type: boolean
      type: object
    GetFeatureListResultDto:
      additionalProperties: false
      properties:
        groups:
          items:
            $ref: '#/components/schemas/FeatureGroupDto'
          nullable: true
          type: array
      type: object
    GetPermissionListResultDto:
      additionalProperties: false
      properties:
        entityDisplayName:
          nullable: true
          type: string
        groups:
          items:
            $ref: '#/components/schemas/PermissionGroupDto'
          nullable: true
          type: array
      type: object
    IanaTimeZone:
      additionalProperties: false
      properties:
        timeZoneName:
          nullable: true
          type: string
      type: object
    IdentityRoleCreateDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        name:
          maxLength: 256
          minLength: 0
          type: string
        isDefault:
          type: boolean
        isPublic:
          type: boolean
      required:
      - name
      type: object
    IdentityRoleDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        isDefault:
          type: boolean
        isStatic:
          type: boolean
        isPublic:
          type: boolean
        concurrencyStamp:
          nullable: true
          type: string
      type: object
    IdentityRoleDtoListResultDto:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/IdentityRoleDto'
          nullable: true
          type: array
      type: object
    IdentityRoleDtoPagedResultDto:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/IdentityRoleDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    IdentityRoleUpdateDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        name:
          maxLength: 256
          minLength: 0
          type: string
        isDefault:
          type: boolean
        isPublic:
          type: boolean
        concurrencyStamp:
          nullable: true
          type: string
      required:
      - name
      type: object
    IdentityUserCreateDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        name:
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        surname:
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        email:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        phoneNumber:
          maxLength: 16
          minLength: 0
          nullable: true
          type: string
        isActive:
          type: boolean
        lockoutEnabled:
          type: boolean
        roleNames:
          items:
            type: string
          nullable: true
          type: array
        password:
          maxLength: 128
          minLength: 0
          type: string
      required:
      - email
      - password
      - userName
      type: object
    IdentityUserDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
        tenantId:
          format: uuid
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        surname:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        emailConfirmed:
          type: boolean
        phoneNumber:
          nullable: true
          type: string
        phoneNumberConfirmed:
          type: boolean
        isActive:
          type: boolean
        lockoutEnabled:
          type: boolean
        lockoutEnd:
          format: date-time
          nullable: true
          type: string
        concurrencyStamp:
          nullable: true
          type: string
      type: object
    IdentityUserDtoPagedResultDto:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/IdentityUserDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    IdentityUserUpdateDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        name:
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        surname:
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        email:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        phoneNumber:
          maxLength: 16
          minLength: 0
          nullable: true
          type: string
        isActive:
          type: boolean
        lockoutEnabled:
          type: boolean
        roleNames:
          items:
            type: string
          nullable: true
          type: array
        password:
          maxLength: 128
          minLength: 0
          nullable: true
          type: string
        concurrencyStamp:
          nullable: true
          type: string
      required:
      - email
      - userName
      type: object
    IdentityUserUpdateRolesDto:
      additionalProperties: false
      properties:
        roleNames:
          items:
            type: string
          type: array
      required:
      - roleNames
      type: object
    Int32KeyValue:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        durationSeconds: 6.027456183070403
        value: 0
      properties:
        value:
          format: int32
          type: integer
        durationSeconds:
          format: double
          nullable: true
          type: number
        expiredAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
      type: object
    Int32SetKeyValueDto:
      additionalProperties: false
      example:
        durationSeconds: 6.027456183070403
        value: 0
      properties:
        value:
          format: int32
          type: integer
        durationSeconds:
          format: double
          nullable: true
          type: number
      type: object
    IStringValueType:
      additionalProperties: false
      properties:
        name:
          nullable: true
          readOnly: true
          type: string
        properties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        validator:
          $ref: '#/components/schemas/IValueValidator'
      type: object
    ItemDto:
      additionalProperties: false
      example:
        extension: extension
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        thumb:
          syncVersion: 6
          extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          url: url
          storageClass: storageClass
          isDeleted: true
          size: 0
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          contentType: contentType
          key: key
          md5: md5
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        description: description
        deletionTime: 2000-01-23T04:56:07.000+00:00
        totalCount: 0
        password: password
        storageClass: storageClass
        file:
          syncVersion: 6
          extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          url: url
          storageClass: storageClass
          isDeleted: true
          size: 0
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          contentType: contentType
          key: key
          md5: md5
        isDeleted: true
        parentItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        children:
        - null
        - null
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rapidCode: rapidCode
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sliceMd5: sliceMd5
        contentType: contentType
        key: key
        syncVersion: 5
        url: url
        tags:
        - fullPath: fullPath
          syncVersion: 1
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          refCount: 6
          isDeleted: true
          parentTagId: parentTagId
          children:
          - null
          - null
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - fullPath: fullPath
          syncVersion: 1
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          refCount: 6
          isDeleted: true
          parentTagId: parentTagId
          children:
          - null
          - null
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        size: 5
        name: name
        fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fileCreatedAt: 2000-01-23T04:56:07.000+00:00
        md5: md5
        fileId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        totalCount:
          format: int32
          type: integer
        password:
          nullable: true
          type: string
        parentItemId:
          format: uuid
          nullable: true
          type: string
        children:
          items:
            $ref: '#/components/schemas/ItemDto'
          nullable: true
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        key:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        size:
          format: int32
          type: integer
        md5:
          nullable: true
          type: string
        sliceMd5:
          nullable: true
          type: string
        rapidCode:
          nullable: true
          type: string
        contentType:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ItemType'
        displayStyle:
          $ref: '#/components/schemas/DisplayStyle'
        extension:
          nullable: true
          type: string
        storageClass:
          nullable: true
          type: string
        fileCreatedAt:
          format: date-time
          nullable: true
          type: string
        fileUpdatedAt:
          format: date-time
          nullable: true
          type: string
        fileId:
          format: uuid
          nullable: true
          type: string
        file:
          $ref: '#/components/schemas/FileDto'
        thumb:
          $ref: '#/components/schemas/FileDto'
        syncVersion:
          format: int64
          type: integer
      type: object
    ItemDtoPagedResultDto:
      additionalProperties: false
      example:
        totalCount: 2
        items:
        - extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          thumb:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          totalCount: 0
          password: password
          storageClass: storageClass
          file:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          isDeleted: true
          parentItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          children:
          - null
          - null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          contentType: contentType
          key: key
          syncVersion: 5
          url: url
          tags:
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          size: 5
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          md5: md5
          fileId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          thumb:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          totalCount: 0
          password: password
          storageClass: storageClass
          file:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          isDeleted: true
          parentItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          children:
          - null
          - null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          contentType: contentType
          key: key
          syncVersion: 5
          url: url
          tags:
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          size: 5
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          md5: md5
          fileId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/ItemDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    ItemType:
      enum:
      - Folder
      - Image
      - Video
      - Audio
      - Word
      - Excel
      - PowerPoint
      - Pdf
      - Note
      - Other
      type: string
    IValueValidator:
      additionalProperties: false
      properties:
        name:
          nullable: true
          readOnly: true
          type: string
        properties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
      type: object
    LanguageInfo:
      additionalProperties: false
      properties:
        cultureName:
          nullable: true
          readOnly: true
          type: string
        uiCultureName:
          nullable: true
          readOnly: true
          type: string
        displayName:
          nullable: true
          readOnly: true
          type: string
        flagIcon:
          nullable: true
          type: string
      type: object
    LocalizableStringDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          readOnly: true
          type: string
        resource:
          nullable: true
          type: string
      type: object
    LoginResultType:
      enum:
      - Success
      - InvalidUserNameOrPassword
      - NotAllowed
      - LockedOut
      - RequiresTwoFactor
      type: string
    MemberDto:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
      properties:
        expiredAt:
          format: date-time
          nullable: true
          type: string
        level:
          $ref: '#/components/schemas/MemberLevel'
      type: object
    MemberLevel:
      enum:
      - None
      - Monthly
      - Quarterly
      - Annual
      - Unlimited
      type: string
    MethodParameterApiDescriptionModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        typeAsString:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        typeSimple:
          nullable: true
          type: string
        isOptional:
          type: boolean
        defaultValue:
          nullable: true
      type: object
    ModuleApiDescriptionModel:
      additionalProperties: false
      properties:
        rootPath:
          nullable: true
          type: string
        remoteServiceName:
          nullable: true
          type: string
        controllers:
          additionalProperties:
            $ref: '#/components/schemas/ControllerApiDescriptionModel'
          nullable: true
          type: object
      type: object
    ModuleExtensionDto:
      additionalProperties: false
      properties:
        entities:
          additionalProperties:
            $ref: '#/components/schemas/EntityExtensionDto'
          nullable: true
          type: object
        configuration:
          additionalProperties: {}
          nullable: true
          type: object
      type: object
    MultiTenancyInfoDto:
      additionalProperties: false
      properties:
        isEnabled:
          type: boolean
      type: object
    NameValue:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    NoteSpecDto:
      additionalProperties: false
      example:
        extension: extension
        website: website
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        author: author
        description: description
        title: title
        authorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: 0
        content: content
        contentFormating: contentFormating
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        title:
          nullable: true
          type: string
        content:
          nullable: true
          type: string
        version:
          format: int32
          type: integer
        author:
          nullable: true
          type: string
        authorId:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        lastModificationTime:
          format: date-time
          type: string
        extension:
          nullable: true
          type: string
        contentFormating:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
      type: object
    NotificationDto:
      additionalProperties: false
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        userId:
          format: uuid
          type: string
        notificationInfoId:
          format: uuid
          type: string
        notificationMethod:
          nullable: true
          type: string
        success:
          nullable: true
          type: boolean
        completionTime:
          format: date-time
          nullable: true
          type: string
        failureReason:
          nullable: true
          type: string
        retryNotificationId:
          format: uuid
          nullable: true
          type: string
      type: object
    NotificationDtoPagedResultDto:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/NotificationDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    NotificationInfoDto:
      additionalProperties: false
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        isDeleted: true
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
      type: object
    NotificationInfoDtoPagedResultDto:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - creationTime: 2000-01-23T04:56:07.000+00:00
          isDeleted: true
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/NotificationInfoDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    ObjectExtensionsDto:
      additionalProperties: false
      properties:
        modules:
          additionalProperties:
            $ref: '#/components/schemas/ModuleExtensionDto'
          nullable: true
          type: object
        enums:
          additionalProperties:
            $ref: '#/components/schemas/ExtensionEnumDto'
          nullable: true
          type: object
      type: object
    ParameterApiDescriptionModel:
      additionalProperties: false
      properties:
        nameOnMethod:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        jsonName:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        typeSimple:
          nullable: true
          type: string
        isOptional:
          type: boolean
        defaultValue:
          nullable: true
        constraintTypes:
          items:
            type: string
          nullable: true
          type: array
        bindingSourceId:
          nullable: true
          type: string
        descriptorName:
          nullable: true
          type: string
      type: object
    PermissionGrantInfoDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        parentName:
          nullable: true
          type: string
        isGranted:
          type: boolean
        allowedProviders:
          items:
            type: string
          nullable: true
          type: array
        grantedProviders:
          items:
            $ref: '#/components/schemas/ProviderInfoDto'
          nullable: true
          type: array
      type: object
    PermissionGroupDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/PermissionGrantInfoDto'
          nullable: true
          type: array
      type: object
    Platform:
      enum:
      - None
      - Unknow
      - Android
      - IOS
      - Windows
      - Macos
      - Linux
      - Web
      - Other
      type: string
    Priority:
      enum:
      - UrgentImportant
      - ImportantNotUrgent
      - UrgentNotImportant
      - NotImportantNotUrgent
      type: string
    ProfileDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        userName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        surname:
          nullable: true
          type: string
        phoneNumber:
          nullable: true
          type: string
        isExternal:
          type: boolean
        hasPassword:
          type: boolean
        concurrencyStamp:
          nullable: true
          type: string
      type: object
    PropertyApiDescriptionModel:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        jsonName:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        typeSimple:
          nullable: true
          type: string
        isRequired:
          type: boolean
      type: object
    ProviderInfoDto:
      additionalProperties: false
      properties:
        providerName:
          nullable: true
          type: string
        providerKey:
          nullable: true
          type: string
      type: object
    RefreshDeviceStatusDto:
      additionalProperties: false
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/DeviceStatus'
      type: object
    RegisterDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          type: string
        emailAddress:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        password:
          format: password
          maxLength: 128
          minLength: 0
          type: string
        appName:
          type: string
      required:
      - appName
      - emailAddress
      - password
      - userName
      type: object
    RemoteServiceErrorInfo:
      additionalProperties: false
      properties:
        code:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        details:
          nullable: true
          type: string
        data:
          additionalProperties: {}
          nullable: true
          type: object
        validationErrors:
          items:
            $ref: '#/components/schemas/RemoteServiceValidationErrorInfo'
          nullable: true
          type: array
      type: object
    RemoteServiceErrorResponse:
      additionalProperties: false
      properties:
        error:
          $ref: '#/components/schemas/RemoteServiceErrorInfo'
      type: object
    RemoteServiceValidationErrorInfo:
      additionalProperties: false
      properties:
        message:
          nullable: true
          type: string
        members:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ResetPasswordDto:
      additionalProperties: false
      properties:
        userId:
          format: uuid
          type: string
        resetToken:
          type: string
        password:
          type: string
      required:
      - password
      - resetToken
      type: object
    ReturnValueApiDescriptionModel:
      additionalProperties: false
      properties:
        type:
          nullable: true
          type: string
        typeSimple:
          nullable: true
          type: string
      type: object
    SendPasswordResetCodeDto:
      additionalProperties: false
      properties:
        email:
          format: email
          maxLength: 256
          minLength: 0
          type: string
        appName:
          type: string
        returnUrl:
          nullable: true
          type: string
        returnUrlHash:
          nullable: true
          type: string
      required:
      - appName
      - email
      type: object
    SendSmsCodeDto:
      additionalProperties: false
      example:
        phoneNumber: phoneNumber
      properties:
        phoneNumber:
          nullable: true
          type: string
      type: object
    SettingsDto:
      additionalProperties: false
      example: {}
      properties:
        appTheme:
          $ref: '#/components/schemas/AppTheme'
      type: object
    SimpleDataDto:
      additionalProperties: false
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        extraProperties:
          key: ""
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        collection: collection
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        collection:
          nullable: true
          type: string
      type: object
    SimpleDataDtoPagedResultDto:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - creationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraProperties:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collection: collection
        - creationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          extraProperties:
            key: ""
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          collection: collection
      properties:
        items:
          items:
            $ref: '#/components/schemas/SimpleDataDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    SpecialItemDto:
      additionalProperties: false
      example:
        items:
        - extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          thumb:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          totalCount: 0
          password: password
          storageClass: storageClass
          file:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          isDeleted: true
          parentItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          children:
          - null
          - null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          contentType: contentType
          key: key
          syncVersion: 5
          url: url
          tags:
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          size: 5
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          md5: md5
          fileId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - extension: extension
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          thumb:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          description: description
          deletionTime: 2000-01-23T04:56:07.000+00:00
          totalCount: 0
          password: password
          storageClass: storageClass
          file:
            syncVersion: 6
            extension: extension
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            url: url
            storageClass: storageClass
            isDeleted: true
            size: 0
            name: name
            fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            rapidCode: rapidCode
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            sliceMd5: sliceMd5
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            fileCreatedAt: 2000-01-23T04:56:07.000+00:00
            contentType: contentType
            key: key
            md5: md5
          isDeleted: true
          parentItemId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          children:
          - null
          - null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rapidCode: rapidCode
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          sliceMd5: sliceMd5
          contentType: contentType
          key: key
          syncVersion: 5
          url: url
          tags:
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          size: 5
          name: name
          fileUpdatedAt: 2000-01-23T04:56:07.000+00:00
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          fileCreatedAt: 2000-01-23T04:56:07.000+00:00
          md5: md5
          fileId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/ItemDto'
          nullable: true
          type: array
        names:
          $ref: '#/components/schemas/SpecialItems'
      type: object
    SpecialItems:
      enum:
      - NoteFolder
      - AlbumFolder
      - MediaFolder
      - MusicFolder
      - DocumentFolder
      type: string
    StringKeyValue:
      additionalProperties: false
      example:
        expiredAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        durationSeconds: 0.8008281904610115
        value: value
      properties:
        value:
          nullable: true
          type: string
        durationSeconds:
          format: double
          nullable: true
          type: number
        expiredAt:
          format: date-time
          nullable: true
          type: string
        createdAt:
          format: date-time
          nullable: true
          type: string
      type: object
    StringSetKeyValueDto:
      additionalProperties: false
      example:
        durationSeconds: 0.8008281904610115
        value: value
      properties:
        value:
          nullable: true
          type: string
        durationSeconds:
          format: double
          nullable: true
          type: number
      type: object
    SyncStateDto:
      additionalProperties: false
      example:
        tagVersion: 0
        lastSyncAt: 2000-01-23T04:56:07.000+00:00
        todoVersion: 1
        itemVersion: 6
      properties:
        lastSyncAt:
          format: date-time
          type: string
        tagVersion:
          format: int64
          type: integer
        itemVersion:
          format: int64
          type: integer
        todoVersion:
          format: int64
          type: integer
      type: object
    TagDto:
      additionalProperties: false
      example:
        fullPath: fullPath
        syncVersion: 1
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        refCount: 6
        isDeleted: true
        parentTagId: parentTagId
        children:
        - null
        - null
        name: name
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        refCount:
          format: int32
          type: integer
        parentTagId:
          nullable: true
          type: string
        parentTag:
          $ref: '#/components/schemas/TagDto'
        children:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        fullPath:
          nullable: true
          type: string
        syncVersion:
          format: int64
          type: integer
      type: object
    TagDtoPagedResultDto:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - fullPath: fullPath
          syncVersion: 1
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          refCount: 6
          isDeleted: true
          parentTagId: parentTagId
          children:
          - null
          - null
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - fullPath: fullPath
          syncVersion: 1
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          refCount: 6
          isDeleted: true
          parentTagId: parentTagId
          children:
          - null
          - null
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    TenantCreateDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        name:
          maxLength: 64
          minLength: 0
          type: string
        adminEmailAddress:
          format: email
          maxLength: 256
          type: string
        adminPassword:
          maxLength: 128
          type: string
      required:
      - adminEmailAddress
      - adminPassword
      - name
      type: object
    TenantDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        concurrencyStamp:
          nullable: true
          type: string
      type: object
    TenantDtoPagedResultDto:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/TenantDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    TenantUpdateDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        name:
          maxLength: 64
          minLength: 0
          type: string
        concurrencyStamp:
          nullable: true
          type: string
      required:
      - name
      type: object
    TimeZone:
      additionalProperties: false
      properties:
        iana:
          $ref: '#/components/schemas/IanaTimeZone'
        windows:
          $ref: '#/components/schemas/WindowsTimeZone'
      type: object
    TimingDto:
      additionalProperties: false
      properties:
        timeZone:
          $ref: '#/components/schemas/TimeZone'
      type: object
    TodoDto:
      additionalProperties: false
      example:
        doneAt: 2000-01-23T04:56:07.000+00:00
        syncVersion: 0
        creationTime: 2000-01-23T04:56:07.000+00:00
        lastModificationTime: 2000-01-23T04:56:07.000+00:00
        creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deletionTime: 2000-01-23T04:56:07.000+00:00
        title: title
        endAt: 2000-01-23T04:56:07.000+00:00
        isDone: true
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - fullPath: fullPath
          syncVersion: 1
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          refCount: 6
          isDeleted: true
          parentTagId: parentTagId
          children:
          - null
          - null
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - fullPath: fullPath
          syncVersion: 1
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          refCount: 6
          isDeleted: true
          parentTagId: parentTagId
          children:
          - null
          - null
          name: name
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isDeleted: true
        children:
        - null
        - null
        lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        creationTime:
          format: date-time
          type: string
        creatorId:
          format: uuid
          nullable: true
          type: string
        lastModificationTime:
          format: date-time
          nullable: true
          type: string
        lastModifierId:
          format: uuid
          nullable: true
          type: string
        isDeleted:
          type: boolean
        deleterId:
          format: uuid
          nullable: true
          type: string
        deletionTime:
          format: date-time
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        priority:
          $ref: '#/components/schemas/Priority'
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        doneAt:
          format: date-time
          nullable: true
          type: string
        isDone:
          type: boolean
        children:
          items:
            $ref: '#/components/schemas/TodoDto'
          nullable: true
          type: array
        syncVersion:
          format: int64
          type: integer
        parentId:
          format: uuid
          nullable: true
          type: string
        endAt:
          format: date-time
          nullable: true
          type: string
      type: object
    TodoDtoPagedResultDto:
      additionalProperties: false
      example:
        totalCount: 6
        items:
        - doneAt: 2000-01-23T04:56:07.000+00:00
          syncVersion: 0
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          title: title
          endAt: 2000-01-23T04:56:07.000+00:00
          isDone: true
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDeleted: true
          children:
          - null
          - null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - doneAt: 2000-01-23T04:56:07.000+00:00
          syncVersion: 0
          creationTime: 2000-01-23T04:56:07.000+00:00
          lastModificationTime: 2000-01-23T04:56:07.000+00:00
          creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deletionTime: 2000-01-23T04:56:07.000+00:00
          title: title
          endAt: 2000-01-23T04:56:07.000+00:00
          isDone: true
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - fullPath: fullPath
            syncVersion: 1
            creationTime: 2000-01-23T04:56:07.000+00:00
            lastModificationTime: 2000-01-23T04:56:07.000+00:00
            creatorId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deletionTime: 2000-01-23T04:56:07.000+00:00
            refCount: 6
            isDeleted: true
            parentTagId: parentTagId
            children:
            - null
            - null
            name: name
            lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isDeleted: true
          children:
          - null
          - null
          lastModifierId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          deleterId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          items:
            $ref: '#/components/schemas/TodoDto'
          nullable: true
          type: array
        totalCount:
          format: int64
          type: integer
      type: object
    TypeApiDescriptionModel:
      additionalProperties: false
      properties:
        baseType:
          nullable: true
          type: string
        isEnum:
          type: boolean
        enumNames:
          items:
            type: string
          nullable: true
          type: array
        enumValues:
          items: {}
          nullable: true
          type: array
        genericArguments:
          items:
            type: string
          nullable: true
          type: array
        properties:
          items:
            $ref: '#/components/schemas/PropertyApiDescriptionModel'
          nullable: true
          type: array
      type: object
    UpdateEmailSettingsDto:
      additionalProperties: false
      properties:
        smtpHost:
          maxLength: 256
          nullable: true
          type: string
        smtpPort:
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        smtpUserName:
          maxLength: 1024
          nullable: true
          type: string
        smtpPassword:
          format: password
          maxLength: 1024
          nullable: true
          type: string
        smtpDomain:
          maxLength: 1024
          nullable: true
          type: string
        smtpEnableSsl:
          type: boolean
        smtpUseDefaultCredentials:
          type: boolean
        defaultFromAddress:
          maxLength: 1024
          type: string
        defaultFromDisplayName:
          maxLength: 1024
          type: string
      required:
      - defaultFromAddress
      - defaultFromDisplayName
      type: object
    UpdateFeatureDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    UpdateFeaturesDto:
      additionalProperties: false
      properties:
        features:
          items:
            $ref: '#/components/schemas/UpdateFeatureDto'
          nullable: true
          type: array
      type: object
    UpdatePermissionDto:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        isGranted:
          type: boolean
      type: object
    UpdatePermissionsDto:
      additionalProperties: false
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/UpdatePermissionDto'
          nullable: true
          type: array
      type: object
    UpdateProfileDto:
      additionalProperties: false
      properties:
        extraProperties:
          additionalProperties: {}
          nullable: true
          readOnly: true
          type: object
        userName:
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        email:
          maxLength: 256
          minLength: 0
          nullable: true
          type: string
        name:
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        surname:
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        phoneNumber:
          maxLength: 16
          minLength: 0
          nullable: true
          type: string
        concurrencyStamp:
          nullable: true
          type: string
      type: object
    UploadCredentials:
      additionalProperties: false
      example:
        securityToken: securityToken
        accessKeyId: accessKeyId
        endPoint: endPoint
        bucketName: bucketName
        storageClass: storageClass
        accessKeySecret: accessKeySecret
        regionId: regionId
        prefix: prefix
        appId: appId
        expiration: expiration
        protocal: protocal
        expiredTime: 1
      properties:
        storageClass:
          nullable: true
          type: string
        endPoint:
          nullable: true
          type: string
        protocal:
          nullable: true
          type: string
        bucketName:
          nullable: true
          type: string
        regionId:
          nullable: true
          type: string
        prefix:
          nullable: true
          type: string
        securityToken:
          nullable: true
          type: string
        accessKeyId:
          nullable: true
          type: string
        accessKeySecret:
          nullable: true
          type: string
        expiration:
          nullable: true
          type: string
        expiredTime:
          format: int64
          type: integer
        appId:
          nullable: true
          type: string
      type: object
    UserData:
      additionalProperties: false
      properties:
        id:
          format: uuid
          type: string
        tenantId:
          format: uuid
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        surname:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        emailConfirmed:
          type: boolean
        phoneNumber:
          nullable: true
          type: string
        phoneNumberConfirmed:
          type: boolean
      type: object
    UserDataListResultDto:
      additionalProperties: false
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserData'
          nullable: true
          type: array
      type: object
    UserLoginInfo:
      additionalProperties: false
      properties:
        userNameOrEmailAddress:
          maxLength: 255
          minLength: 0
          type: string
        password:
          format: password
          maxLength: 32
          minLength: 0
          type: string
        rememberMe:
          type: boolean
      required:
      - password
      - userNameOrEmailAddress
      type: object
    UserStorageDto:
      additionalProperties: false
      example:
        maxSize: 0
        totalCount: 1
        items:
        - size: 5
          name: name
          count: 5
          title: title
        - size: 5
          name: name
          count: 5
          title: title
        currentSize: 6
      properties:
        maxSize:
          format: int64
          type: integer
        currentSize:
          format: int64
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserStorageItemDto'
          nullable: true
          type: array
      type: object
    UserStorageItemDto:
      additionalProperties: false
      example:
        size: 5
        name: name
        count: 5
        title: title
      properties:
        name:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        count:
          format: int32
          type: integer
        size:
          format: int64
          type: integer
      type: object
    WindowsTimeZone:
      additionalProperties: false
      properties:
        timeZoneId:
          nullable: true
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:44306/connect/authorize
          scopes:
            Doggy: Doggy API
          tokenUrl: https://localhost:44306/connect/token
      type: oauth2
