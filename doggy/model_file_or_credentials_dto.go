/*
Doggy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package doggy

import (
	"encoding/json"
)

// FileOrCredentialsDto struct for FileOrCredentialsDto
type FileOrCredentialsDto struct {
	File *FileDto `json:"file,omitempty"`
	Credentials *UploadCredentials `json:"credentials,omitempty"`
}

// NewFileOrCredentialsDto instantiates a new FileOrCredentialsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileOrCredentialsDto() *FileOrCredentialsDto {
	this := FileOrCredentialsDto{}
	return &this
}

// NewFileOrCredentialsDtoWithDefaults instantiates a new FileOrCredentialsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileOrCredentialsDtoWithDefaults() *FileOrCredentialsDto {
	this := FileOrCredentialsDto{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *FileOrCredentialsDto) GetFile() FileDto {
	if o == nil || o.File == nil {
		var ret FileDto
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOrCredentialsDto) GetFileOk() (*FileDto, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *FileOrCredentialsDto) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given FileDto and assigns it to the File field.
func (o *FileOrCredentialsDto) SetFile(v FileDto) {
	o.File = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *FileOrCredentialsDto) GetCredentials() UploadCredentials {
	if o == nil || o.Credentials == nil {
		var ret UploadCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileOrCredentialsDto) GetCredentialsOk() (*UploadCredentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *FileOrCredentialsDto) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given UploadCredentials and assigns it to the Credentials field.
func (o *FileOrCredentialsDto) SetCredentials(v UploadCredentials) {
	o.Credentials = &v
}

func (o FileOrCredentialsDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	return json.Marshal(toSerialize)
}

type NullableFileOrCredentialsDto struct {
	value *FileOrCredentialsDto
	isSet bool
}

func (v NullableFileOrCredentialsDto) Get() *FileOrCredentialsDto {
	return v.value
}

func (v *NullableFileOrCredentialsDto) Set(val *FileOrCredentialsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableFileOrCredentialsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableFileOrCredentialsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileOrCredentialsDto(val *FileOrCredentialsDto) *NullableFileOrCredentialsDto {
	return &NullableFileOrCredentialsDto{value: val, isSet: true}
}

func (v NullableFileOrCredentialsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileOrCredentialsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


