/*
Doggy API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package doggy

import (
	"encoding/json"
)

// PropertyApiDescriptionModel struct for PropertyApiDescriptionModel
type PropertyApiDescriptionModel struct {
	Name NullableString `json:"name,omitempty"`
	JsonName NullableString `json:"jsonName,omitempty"`
	Type NullableString `json:"type,omitempty"`
	TypeSimple NullableString `json:"typeSimple,omitempty"`
	IsRequired *bool `json:"isRequired,omitempty"`
}

// NewPropertyApiDescriptionModel instantiates a new PropertyApiDescriptionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyApiDescriptionModel() *PropertyApiDescriptionModel {
	this := PropertyApiDescriptionModel{}
	return &this
}

// NewPropertyApiDescriptionModelWithDefaults instantiates a new PropertyApiDescriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyApiDescriptionModelWithDefaults() *PropertyApiDescriptionModel {
	this := PropertyApiDescriptionModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PropertyApiDescriptionModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *PropertyApiDescriptionModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetName() {
	o.Name.Unset()
}

// GetJsonName returns the JsonName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetJsonName() string {
	if o == nil || o.JsonName.Get() == nil {
		var ret string
		return ret
	}
	return *o.JsonName.Get()
}

// GetJsonNameOk returns a tuple with the JsonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetJsonNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JsonName.Get(), o.JsonName.IsSet()
}

// HasJsonName returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasJsonName() bool {
	if o != nil && o.JsonName.IsSet() {
		return true
	}

	return false
}

// SetJsonName gets a reference to the given NullableString and assigns it to the JsonName field.
func (o *PropertyApiDescriptionModel) SetJsonName(v string) {
	o.JsonName.Set(&v)
}
// SetJsonNameNil sets the value for JsonName to be an explicit nil
func (o *PropertyApiDescriptionModel) SetJsonNameNil() {
	o.JsonName.Set(nil)
}

// UnsetJsonName ensures that no value is present for JsonName, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetJsonName() {
	o.JsonName.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *PropertyApiDescriptionModel) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *PropertyApiDescriptionModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetType() {
	o.Type.Unset()
}

// GetTypeSimple returns the TypeSimple field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PropertyApiDescriptionModel) GetTypeSimple() string {
	if o == nil || o.TypeSimple.Get() == nil {
		var ret string
		return ret
	}
	return *o.TypeSimple.Get()
}

// GetTypeSimpleOk returns a tuple with the TypeSimple field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PropertyApiDescriptionModel) GetTypeSimpleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TypeSimple.Get(), o.TypeSimple.IsSet()
}

// HasTypeSimple returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasTypeSimple() bool {
	if o != nil && o.TypeSimple.IsSet() {
		return true
	}

	return false
}

// SetTypeSimple gets a reference to the given NullableString and assigns it to the TypeSimple field.
func (o *PropertyApiDescriptionModel) SetTypeSimple(v string) {
	o.TypeSimple.Set(&v)
}
// SetTypeSimpleNil sets the value for TypeSimple to be an explicit nil
func (o *PropertyApiDescriptionModel) SetTypeSimpleNil() {
	o.TypeSimple.Set(nil)
}

// UnsetTypeSimple ensures that no value is present for TypeSimple, not even an explicit nil
func (o *PropertyApiDescriptionModel) UnsetTypeSimple() {
	o.TypeSimple.Unset()
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *PropertyApiDescriptionModel) GetIsRequired() bool {
	if o == nil || o.IsRequired == nil {
		var ret bool
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyApiDescriptionModel) GetIsRequiredOk() (*bool, bool) {
	if o == nil || o.IsRequired == nil {
		return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *PropertyApiDescriptionModel) HasIsRequired() bool {
	if o != nil && o.IsRequired != nil {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *PropertyApiDescriptionModel) SetIsRequired(v bool) {
	o.IsRequired = &v
}

func (o PropertyApiDescriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.JsonName.IsSet() {
		toSerialize["jsonName"] = o.JsonName.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.TypeSimple.IsSet() {
		toSerialize["typeSimple"] = o.TypeSimple.Get()
	}
	if o.IsRequired != nil {
		toSerialize["isRequired"] = o.IsRequired
	}
	return json.Marshal(toSerialize)
}

type NullablePropertyApiDescriptionModel struct {
	value *PropertyApiDescriptionModel
	isSet bool
}

func (v NullablePropertyApiDescriptionModel) Get() *PropertyApiDescriptionModel {
	return v.value
}

func (v *NullablePropertyApiDescriptionModel) Set(val *PropertyApiDescriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyApiDescriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyApiDescriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyApiDescriptionModel(val *PropertyApiDescriptionModel) *NullablePropertyApiDescriptionModel {
	return &NullablePropertyApiDescriptionModel{value: val, isSet: true}
}

func (v NullablePropertyApiDescriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyApiDescriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


